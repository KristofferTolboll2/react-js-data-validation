{"version":3,"sources":["logo.svg","Layout/Layout.js","Layout/UI/Backdrop/Backdrop.js","Layout/UI/Modal/Modal.js","Components/Signup.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Layout","react_default","a","createElement","Fragment","Navbar_default","inverse","collapseOnSelect","expand","bg","variant","className","Brand","href","io","size","Toggle","aria-controls","Collapse","id","Nav_default","Link","fa","Form_default","inline","style","float","FormControl_default","type","placeholder","Button_default","Component","backdrop","props","show","onClick","clicked","Modal","nextProps","this","children","Backdrop_Backdrop","onClose","Signup","state","email","isValidEmail","name","isValidName","isValidAddress","address","address2","phoneNumber","moreAddresses","morePhoneNumbers","successfullPost","res","emailValidatorHandler","re","console","log","test","_this","setState","nameValidatorHandler","length","includes","split","addressValidatorHandler","phoneValidatorHandler","phoneNumbers","isValidPhone","onSubmithandler","e","preventDefault","requestForm","addresses","axios","post","then","response","Object","assign","data","config","closeModalHandler","_this2","class","for","aria-describedby","onChange","target","value","react_transition_group","transitionName","transitionEnterTimeout","transitionLeaveTimeout","transition","UI_Modal_Modal","role","data-dismiss","aria-label","aria-hidden","JSON","stringify","undefined","disabled","prevstate","width","height","App","Layout_Layout_Layout","Signup_Signup","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1a8d599f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.ee7cd8ed.svg\";","import React, { Component } from 'react'\r\nimport Navbar from 'react-bootstrap/Navbar'\r\nimport Nav from 'react-bootstrap/Nav'\r\nimport NavDropdown from 'react-bootstrap/NavDropdown'\r\nimport Form from 'react-bootstrap/Form'\r\nimport FormControl from 'react-bootstrap/FormControl'\r\nimport Button from 'react-bootstrap/Button'\r\nimport { FaReact, FaGithub, FaSpinner, FaInfoCircle } from 'react-icons/fa'\r\nimport {IoMdPlanet} from 'react-icons/io'\r\nimport './Layout.css'\r\n\r\nexport default class Layout extends Component {\r\n  render() {\r\n    return (\r\n      <>\r\n      <Navbar inverse collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\" className=\"nav-bar\">\r\n      <Navbar.Brand href=\"#home\"><div className=\"logo\"><IoMdPlanet size={'2em'}/></div></Navbar.Brand>\r\n      <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n      <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n        <Nav className=\"mr-auto\">\r\n         <Nav.Link  href=\"#action/3.1\"><div className=\"icon\"><FaInfoCircle size={'2em'} /></div>About</Nav.Link>\r\n          <Nav.Link  href=\"#action/3.1\"><div className=\"icon\"><FaReact size={'2em'} /></div> React</Nav.Link>\r\n          <Nav.Link  href=\"#action/3.1\"><div className=\"icon\"><FaSpinner size={'2em'} /></div>Contact</Nav.Link>\r\n          <Nav.Link  href=\"#action/3.1\"><div className=\"icon\"><FaGithub size={'2em'} /></div>Github</Nav.Link>\r\n        </Nav>\r\n        <br />        \r\n        <Form inline style={{\r\n          float: 'right'\r\n        }}>\r\n      <FormControl type=\"text\" placeholder=\"Search\" className=\"mr-sm-2\" />\r\n      <Button variant=\"outline-success\">Search</Button>\r\n    </Form>\r\n      </Navbar.Collapse>\r\n    </Navbar>\r\n    <div>\r\n      <br></br>\r\n      {/*create space here */}\r\n    </div>\r\n    </>\r\n    )\r\n  }\r\n}\r\n","import React from 'react';\r\nimport './Backdrop.css'\r\n\r\n\r\nconst backdrop = (props) => (\r\n    props.show ? <div className=\"Backdrop\" onClick={props.clicked}></div> : null\r\n);\r\n\r\n\r\nexport default backdrop","import React, { Component } from 'react';\r\nimport './Modal.css'\r\nimport Backdrop from '../Backdrop/Backdrop';\r\n\r\nclass Modal extends Component {\r\n\r\n    shouldComponentUpdate(nextProps) {\r\n        return nextProps.show !== this.props.show || nextProps.children !== this.props.children;\r\n    }\r\n\r\n    render() {\r\n\r\n        if (!this.props.show)\r\n            return null;\r\n\r\n        return (\r\n            <div>\r\n                <Backdrop show={this.props.show} clicked={this.props.onClose} />\r\n                <div className=\"Modal\">\r\n                    {this.props.children}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default Modal;","import React, { Component } from 'react'\r\nimport Navbar from 'react-bootstrap'\r\nimport { CSSTransitionGroup } from 'react-transition-group' // ES6\r\nimport './Signup.css'\r\nimport { timingSafeEqual } from 'crypto';\r\nimport axios from 'axios'\r\nimport Modal from '../Layout/UI/Modal/Modal'   \r\n\r\nexport default class Signup extends Component {\r\n\r\n    state={\r\n        email: '',\r\n        isValidEmail: false,\r\n        name: '', \r\n        isValidName: false,\r\n        isValidAddress: false,\r\n        address: '',\r\n        address2: '',\r\n        phoneNumber: '',\r\n        moreAddresses: false,\r\n        morePhoneNumbers: false,\r\n        successfullPost: false,\r\n        res: {}\r\n    }\r\n\r\n//validate email\r\nemailValidatorHandler = () =>{\r\n    var re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n    console.log(re.test(this.state.email))\r\n    this.setState({isValidEmail: re.test(this.state.email)})\r\n}\r\n\r\n//validate name\r\nnameValidatorHandler = () =>{\r\n  if((this.state.name.length > 2 && this.state.name.length < 40 && this.state.name.includes(' '))){\r\n    console.log(this.state.name.split(' ')[1].length > 2, this.state.name.split(' ')[1].length < 30)\r\n    if(this.state.name.split(' ')[1].length > 2 && this.state.name.split(' ')[1].length < 30)\r\n    this.setState({isValidName: true}) \r\n  }else{\r\n    this.setState({isValidName: false})\r\n  }\r\n}\r\n\r\n//validate address\r\naddressValidatorHandler = () =>{\r\n  console.log(this.state.isValidAddress)\r\n  console.log(this.state.address, this.state.address2)\r\n  if(this.state.moreAddresses) {\r\n   if(this.state.address.length > 6 && this.state.address2.length > 6 && this.state.address !== this.state.address2){\r\n   this.setState({isValidAddress: true})\r\n   }else{\r\n     this.setState({isValidAddress: false})\r\n   }\r\n }else if(this.state.address.length > 6 && !this.state.moreAddresses){\r\n   this.setState({isValidAddress: true})\r\n }else{\r\n   this.setState({isValidAddress: false})\r\n }\r\n}\r\n\r\n//validate phone\r\nphoneValidatorHandler = () =>{\r\n  console.log(/^\\d+$/.test(this.state.phoneNumbers))\r\n  this.setState({isValidPhone: (this.state.phoneNumber.length > 6 && this.state.phoneNumber.length < 13 && /^\\d+$/.test(this.state.phoneNumber))})\r\n}\r\n\r\n//submitter handler\r\nonSubmithandler = e=>{\r\n  e.preventDefault();\r\n  const requestForm = {\r\n    email: this.state.email,\r\n    name: this.state.name,\r\n    addresses: [this.state.address, this.state.address2],\r\n    phoneNumber: this.state.phoneNumber\r\n  }\r\n  axios.post(\"https://submitform-87b3a.firebaseio.com/'test'.json\", requestForm)\r\n  .then(response =>{\r\n    console.log(response)\r\n    let res = Object.assign({}, this.state.res)\r\n    res.id = response.data.name;\r\n    res.data = response.config.data\r\n    this.setState({successfullPost: true, res})\r\n  })\r\n\r\n}\r\n\r\ncloseModalHandler = () =>\r\n  this.setState({successfullPost: false})\r\n\r\n \r\n\r\nrender(){\r\n  console.log(this.state.res)\r\n    console.log(this.state.name.split(' ')[1])\r\n    console.log(this.state.successfullPost)\r\n    \r\n    return (\r\n      <div>\r\n        <h1>Sign up form</h1>\r\n        <form>\r\n  <fieldset>\r\n    <legend>Example of validating a signup form</legend>\r\n    <div class=\"form-group\">\r\n      <label for=\"email\">Email address</label>\r\n      <input type=\"email\" class={ this.state.isValidEmail ?\"form-control is-valid\" : \"form-control\"} id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" placeholder=\"Enter email\" onChange={(e) => this.setState({email: e.target.value}, () => this.emailValidatorHandler())}/>\r\n      {this.state.isValidEmail ?\r\n      <small id=\"emailHelp\" class=\"form-text text-muted\">We'll never share your email with anyone</small>\r\n      :  <small id=\"emailHelp\" class=\"form-text text-muted\">Please enter a valid email address</small> }\r\n    </div>\r\n\r\n\r\n    <div class=\"form-group\">\r\n      <label for=\"Name\">Name</label>\r\n      <input type=\"text\" class={this.state.isValidName ?\"form-control is-valid\" : \"form-control\"} id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" placeholder=\"Enter name\" onChange={(e) => this.setState({name: e.target.value}, () => this.nameValidatorHandler())}/>\r\n      {this.state.isValidName ?\r\n      <small id=\"emailHelp\" class=\"form-text text-muted\">Welcome aboard {this.state.name.split(' ')[0]}</small>\r\n      :  <small id=\"emailHelp\" class=\"form-text text-muted\">Please enter your firstname and lastname</small> }\r\n    </div>\r\n\r\n\r\n    <div class=\"form-group\">\r\n      <label for=\"Address\">Address</label>\r\n      <input type=\"text\" class={ this.state.isValidAddress ?\"form-control is-valid\" : \"form-control\"} id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" placeholder=\"Enter address\" onChange={(e) => this.setState({address: e.target.value}, () => this.addressValidatorHandler())}/>\r\n      {this.state.isValidAddress ?\r\n      <small id=\"emailHelp\" class=\"form-text text-muted\">We'll never share your address with anyone</small>\r\n      :  <small id=\"emailHelp\" class=\"form-text text-muted\">Please enter a your address</small> }\r\n\r\n<CSSTransitionGroup \r\ntransitionName=\"example\"\r\ntransitionEnterTimeout={300}\r\ntransitionLeaveTimeout={100}>\r\n      {this.state.moreAddresses &&\r\n  <div class=\"form-group\" style={{transition: '2s'}}>\r\n      <label for=\"Address\">Second Address</label>\r\n      <input type=\"text\" class={ this.state.isValidAddress ?\"form-control is-valid\" : \"form-control\"} id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" placeholder=\"Enter address\" onChange={(e) => this.setState({address2: e.target.value}, () => this.addressValidatorHandler())}/>\r\n      {this.state.isValidAddress ?\r\n      <small id=\"emailHelp\" class=\"form-text text-muted\">We'll never share your address with anyone</small>\r\n      : <small id=\"emailHelp\" class=\"form-text text-muted\">Please enter  your second address</small>}\r\n      {(this.state.address === this.state.address2 && this.state.address !== '' ) &&\r\n      <small id=\"emailHelp\" class=\"form-text text-muted\">Addresses cannot be the same</small>}\r\n       </div>\r\n      }\r\n      </CSSTransitionGroup>\r\n      \r\n{/* JSX code for succes-popup modal */}\r\n\r\n<div>\r\n<Modal show={this.state.successfullPost} onClose={this.closeModalHandler}>\r\n  <div class=\"modal-dialog\" role=\"document\">\r\n    <div class=\"modal-content\">\r\n      <div class=\"modal-header\">\r\n        <h5 class=\"modal-title\">Modal title</h5>\r\n        <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n          <span aria-hidden=\"true\">&times;</span>\r\n        </button>\r\n      </div>\r\n      <div class=\"modal-body\">\r\n        <h2>Success!</h2>\r\n        <p>A request was saved in a firebase database</p>\r\n        {this.state.res &&\r\n        <div>\r\n        <p>Id:  {this.state.res.id}</p>\r\n        <p>Data:  {JSON.stringify(this.state.res.data, undefined, 2)}</p>\r\n        </div>\r\n        }\r\n      </div>\r\n      <div class=\"modal-footer\">\r\n        <button type=\"button\" class=\"btn btn-primary\">Save changes</button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</Modal>\r\n</div>\r\n\r\n\r\n\r\n  <div class=\"custom-control custom-switch\">\r\n      <input type=\"checkbox\" class=\"custom-control-input\" disabled=\"\" id=\"customSwitch2\" onChange={e => this.setState(prevstate => ({\r\n        moreAddresses: !prevstate.moreAddresses\r\n      }), ()=> this.addressValidatorHandler())} />\r\n      <label class=\"custom-control-label\" for=\"customSwitch2\">I have more than one address</label>\r\n    </div>\r\n      </div>\r\n      <br />\r\n    \r\n     \r\n    <div class=\"form-group\">\r\n      <label for=\"Phone\">Phone number</label>\r\n      <input type=\"text\" class={ this.state.isValidPhone ?\"form-control is-valid\" : \"form-control\"} id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" placeholder=\"Enter phone number\" onChange={e => this.setState({phoneNumber: e.target.value}, () => this.phoneValidatorHandler())}/>\r\n      {this.state.isValidPhone ?\r\n      <small id=\"emailHelp\" class=\"form-text text-muted\">We'll never share your phone number with anybody</small>\r\n      :  <small id=\"emailHelp\" class=\"form-text text-muted\">Please enter your phone number</small> }\r\n    </div>\r\n    </fieldset>\r\n<br/>\r\n    <button type=\"button\" style={{width: '40%', height: '3em'}} class=\"btn btn-primary submit-btn\" onClick={e => this.onSubmithandler(e)}>Submit</button>\r\n    <br/>\r\n    <br/>\r\n\r\n   </form>\r\n   </div>\r\n     \r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\nimport Layout from './Layout/Layout';\r\nimport Signup from './Components/Signup';\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n       <Layout />\r\n       <Signup />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}